#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define MAX 10
struct stack{
    int arr[MAX];
    int top;
};
void push(struct stack *s,char ele){
    if(s->top==MAX-1)
        printf("\nStack is full");
    else{
        s->top+=1;
        s->arr[s->top]=ele;
    }
       
}
char pop(struct stack *s){
    if(s->top==-1)
        printf("\nStack is empty\n");
    else{
        return s->arr[s->top--];
    }
}
void display(struct stack *s){
    if(s->top==-1)
        printf("\nStack empty\n");
    else{
        printf("\nStack elements:\n");
    for(int i=0;i<s->top;i++)
        printf(" %d ",s->arr[i]);
    }
}
int main(){
    char str[50],c,d;
    int count,l,r;
    count=l=r=0;
    struct stack s;
    s.top=-1;
    printf("\nEnter an expression:\n");
    scanf("%s",str);
    for(int i=0;i<strlen(str);i++){
        c=str[i];
        if(c=='{' || c=='(' || c=='['){          // if c is opening bracket push
            
            push(&s,c);
            l+=1;}
        else{
            
            d=pop(&s);                //else pop and check
             
            r+=1;
            if((d=='[' && c==']') || (d=='{' && c=='}') || (d=='(' && c==')'))
                count++;
        }
        
    }
    if(l==r){
        if(count==strlen(str)/2)
            printf("\nBalanced\n");
        else
            printf("\nNot Balanced\n");
    }
     else
            printf("\nNot Balanced\n");
    
    
    
}
