#include<stdio.h>

int a[20][20],q[20],visited[20],count[20],n,i,j,f=0,r=-1;
void bfs(int v) {
    visited[v]=1;     //mark the vertex as visited
    printf(" %d ",v);    //print as BFS
	for (i=1;i<=n;i++)      
	  if(a[v][i] && !visited[i]){  // select adjacent vertices
	      if(count[i]==0){           //if they are not in queue i.e count[i] is 0 enqueue them and increase count[i]
	        q[++r]=i;                // else if count[i]==1 i.e they are in queue dont add them again
	        count[i]+=1;}} 
	if(f<=r) {                      
		visited[q[f]]=1;            // mark the vertex at the start of queue as visited
		bfs(q[f++]);                // do bfs of that vertex
	}
}
void main() {
	int v;
	
	printf("\n Enter the number of vertices:");
	scanf("%d",&n);
	for (i=1;i<=n;i++) {
		q[i]=0;
		visited[i]=0;
		count[i]=0;
	}
	printf("\n Enter graph data in matrix form:\n");
	for (i=1;i<=n;i++)
	  for (j=1;j<=n;j++)
	   scanf("%d",&a[i][j]);
	printf("\n Enter the starting vertex:");
	scanf("%d",&v);
	bfs(v);
	printf("\n");
	printf("\n The node which are reachable are:\n");
	for (i=1;i<=n;i++)
	  if(visited[i])
	   printf("%d\t",i); else
	   printf("\n Bfs is not possible");
	
}
