#include<stdio.h>
#include<stdlib.h>
struct node{
    int val;
    struct node *left;
    struct node *right;
};
struct node *newnode(int data){
struct node *p;
p=(struct node *)malloc(sizeof(struct node));
p->val=data;
p->left=p->right=NULL;
return p;
}
void inorder(struct node *p){
     if(p!=NULL){
        inorder(p->left);
        printf(" %d ",p->val);
        inorder(p->right);
    }
}
struct node *insertlevelorder(int arr[],struct node *root,int i,int n){
    if(n==0)
        return NULL;
if(i<n){
        struct node *temp=newnode(arr[i]);
        root=temp;

root->left=insertlevelorder(arr,root->left,2*i+1,n);
root->right=insertlevelorder(arr,root->right,2*i+2,n);
}
return root;
}
int heightTree(struct node* root)
{
    if (root == NULL)
        return 0;
    else {
        
        int lDepth = heightTree(root->left);
        int rDepth = heightTree(root->right);
 
        
        if (lDepth > rDepth)
            return (lDepth + 1);
        else
            return (rDepth + 1);
    }
}

        
  
int main(){
int arr[10],k,n;
printf("Enter number of terms:");
scanf("%d",&n);
for(k=0;k<n;k++){
    printf("Enter element:");
    scanf("%d",&arr[k]);
}
struct node* root=insertlevelorder(arr,root,0,n);
inorder(root);
if(root!=NULL)
printf("\nThe height of the tree is %d\n",heightTree(root));
else
printf("\nTree height is 0\n");
}
