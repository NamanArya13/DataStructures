#include<stdio.h>
#include<stdlib.h>
struct node{
    int info;
    int flag;
    struct node *next;
};
struct node *head;
int count=0;
struct node *getnode(int ele){
    struct node *temp;
    temp=(struct node *)malloc(sizeof(struct node));
    temp->info=ele;
    temp->next=NULL;
    return temp;
}
void insert(int ele){
    count++;
    struct node *p;
    p=getnode(ele);
    if(head==NULL)
       head=p;
    else{
        struct node *q;
        q=head;
        while(q->next!=NULL)
             q=q->next;
        q->next=p;
        
    }
}
void deletefront(){
    if(head==NULL)
       printf("\nLIST EMPTY\n");
    else{
        if(head->next==NULL){
            printf("\nDELETED %d\n",head->info);
            free(head);
            head=NULL;
            count--;
        }
    else{
        struct node *p;
        p=head;
        head=head->next;
        printf("\n DELETED %d\n",p->info);
        free(p);
        count--;
    }
    }
}
void display(){
       struct node *p;
    if(head==NULL)
        printf("\nEMPTY LIST\n");
    p=head;
    printf("\nLIST CONTENTS: ");
    while(p!=NULL){
        printf(" %d ",p->info);
        p=p->next;
    }
    printf("\n");
}
void createcycle(){
    struct node *p;
    p=head;
    while(p->next!=NULL)
        p=p->next;
    p->next=head->next;
    printf("p->next=%d",p->next->info);
}
void detectcycle(){
    struct node *r;
    struct node *s;
    r=head;
    if(head==NULL || head->next==NULL)
        {
            printf("\nNo cycle\n");
            return;
        }
    for(int i=0;i<=count+1;i++){
        printf("\nr->info=%d i=%d",r->info,i);
        if(r->flag==1){
            printf("\nLoop detected\n");
            return;}
        else{
            r->flag=1;
            r=r->next;
        }
    }
    printf("\nNo loop\n");
}
int main(){
    head=NULL;
    int ele,ch,m;
    while(1){
        printf("1.INSERT\t2.DELETE\t3.DISPLAY\t4.CYCLE\t5.DETECT\t6.EXIT\n");
        scanf("%d",&ch);
        switch(ch){
            case 1:printf("\nENTER ELEMENT TO ENTER :");
                   scanf("%d",&ele);
                   insert(ele);
                   break;
            case 2:deletefront();
                   break;
            case 3:display();
                   break;
            case 4:createcycle();
                   break;
            case 5:detectcycle();
                   break;
            default:exit(0);
        }}}


