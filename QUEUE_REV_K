#include<stdio.h>
#define MAX 10
#include<stdlib.h>

struct queue
{
    int front, rear;
    int que[MAX];
};
typedef struct queue QUEUE;
void enqueue(QUEUE *q, int ele)
{
    if(q->rear==MAX)
        printf("\nQueue is full\n");
    else{
        q->rear=(q->rear+1);
        q->que[q->rear]=ele;
        if(q->front==-1)
            q->front=0;
    }
}
int dequeue(QUEUE *q)
{
 int k;
 if(q->front==-1){
        printf("\nQueue is empty\n");
        return -1;}
 else
 {
    k=q->que[q->front];
    

   if(q->front==q->rear)
    {//printf("\n The message retreived is  \n");
     //printf("%s",q->data[q->front]);
     q->front=-1;
     q->rear=-1;
    }
    else{
         //printf("\n The deleted element is \t%d",q->data[q->front]);
        q->front=(q->front+1);
 }
 return k;
}
}
void display(QUEUE q)
{   int i=0;
    if(q.front==-1)
        printf("\nQUEUE is empty");
    else
    {   printf("\nThe elements of the queue are\n");
        for(i=q.front;i!=q.rear;i++)
        {
            printf("%d\n",q.que[i]);
        }
        printf("%d\n",q.que[i]);
    }
}
void reversek(struct queue *q,int k){
    int temp,i,j;
    printf("q->front=%d q->rear=%d",q->front,q->rear);
    if(k==1)
        return;
    if(q->front==q->rear){
        printf("\nQueue empty\n");
        return;
    }
    else{
        for(i=q->front,j=q->front+k-1;i<j;i++,j--){
            printf("\nq->que[%d]=%d  q->que[%d]=%d",i,q->que[i],j,q->que[j]);
            temp=q->que[i];
            q->que[i]=q->que[j];
            q->que[j]=temp;
        }
        
    }
    
    
    
}
int main(){
    int ele,ch,k;
    QUEUE q;
    q.front=q.rear=-1;
    for(;;){
        printf("\n1.ENQUEUE\t2.DEQUEUE\t3.DISPLAY\t4.REVERSE K ELEMENTS\t5.EXIT\n");
        scanf("%d",&ch);
        switch(ch){
            case 1:printf("\nEnter element to enqueue:\n");
                   scanf("%d",&ele);
                   enqueue(&q,ele);
                   break;
            case 2:printf("\nThe element removed is %d\n",dequeue(&q));
                   break;
            case 3:display(q);
                   break;
            case 4:printf("\nEnter k\n");
                   scanf("%d",&k);
                   reversek(&q,k);
                   display(q);
                   break;
            default:exit(0);
                    
        }
    }
}








