#include<stdio.h>
#include<stdlib.h>
#define MAX 100
struct queue{
    int arr[MAX];
    int front,rear;
}q1;
typedef struct queue QUEUE;
void enqueue(QUEUE *q,int ele){
    if(q->rear==MAX-1){
            printf("\nstack is full\n");
            return;}
    else{
            q->rear++;
            q->arr[q->rear]=ele;
             if(q->front==-1)
            q->front=0;
        }}
int dequeue(QUEUE *q){
    int k;
   if(q->front==-1){
       printf("\nStack is empty\n");
       return -234423;
   }
   else{
       k=q->arr[q->front];
       if(q->front==q->rear)
            q->front=q->rear=-1;
       else
            q->front++;
       return k;
   }}
void display(QUEUE q)
{   int i=0;
    if(q.front==-1)
        printf("\nStack is empty");
    else
    {   printf("\nThe elements of the stack are\n");
        for(i=q.front;i!=q.rear;i++)
        {
            printf("%d\n",q.arr[i]);
        }
        printf("%d\n",q.arr[i]);
    }}

int pop(QUEUE *q){
   int i,k;
   for(i=q->front;i<q->rear;i++){
       enqueue(&q1,dequeue(q));
   }
   if(q->front!=-1)
   k=dequeue(q);
   for(i=q1.front;i<=q1.rear;i++)
        enqueue(q,dequeue(&q1));
    return k;
}
int main()
{   int i;
    QUEUE q;
    q1.front=-1;
    q1.rear=-1;
    q.front=-1;
    q.rear=-1;
    int ch;
    int ele,m;
    while(ch!=5)
    {
    printf("\n1 PUSH\t2 POP\t3 DISPLAY\t4 REVERSE\t5.EXIT\n");
    scanf("%d",&ch);
    switch(ch)
    {
        case 1:
            printf("\nEnter element to add\n");
            scanf("%d",&ele);
            enqueue(&q,ele);
            break;
        case 2:
            m=pop(&q);
             if(m!=-234423)
            printf("\nThe deleted element is: %d \n",m);
            break;
        case 3:
            display(q);
            break;
        default:
            exit(0);
            break;
    }
    }
    return 0;
}







